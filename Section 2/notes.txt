-----------------------
Build Image Command
-----------------------
docker build . (docker_file_path relative to terminal folder)

------------------------
To run a container
------------------------
docker run image_name

------------------------
LocalHost gives nothing
------------------------
if we visit localhost it says it can't connect 
EXPOSE 80 is for documentaion purpose not doing anything not exposing to local machine
can remove EXPOSE 80 also will work same

special option needs to be mentioned 
docker run -p (local machine) 3000:80 (expose port) docker_image_name

------------------------
To stop docker
------------------------
docker ps -> List all running containers 
docker ps -a -> List all running or stopped containers
docker stop container_name

------------------------
Layered Architecture
------------------------
till now as far we know if we make changes of code we need to build it again 

docker uses layer based architecture
basically it caches the image and when we rebuild it compares if no change it uses that image only
when one layer changes all subsequent layers are also changed
example when COPY is rebuilt all commands after that are rebuilt

------------------------------
As an optimisation we can do
------------------------------

FROM node  

WORKDIR /app

COPY package.json /app

RUN npm install 

COPY . ./

EXPOSE 80

CMD ["node","server.js"]

here we copied package.json and run command before copying all the folders and if any change 
take place in any folder the n last copy and cmd are rebuilt all other cached

container doesn't copy the image code env it utilises it only it adds a layer over it

-------
Note
-------
As an additional quick side-note: 
For all docker commands where an ID can be used, you don't always have to copy / write out 
the full id. You can also just use the first (few) character(s) - just enough to have a unique identifier.